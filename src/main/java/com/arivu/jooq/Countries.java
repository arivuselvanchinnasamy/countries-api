/*
 * This file is generated by jOOQ.
*/
package com.arivu.jooq;


import com.arivu.jooq.tables.Continent;
import com.arivu.jooq.tables.Country;
import com.arivu.jooq.tables.SchemaVersion;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Countries extends SchemaImpl {

    private static final long serialVersionUID = -562068033;

    /**
     * The reference instance of <code>countries</code>
     */
    public static final Countries COUNTRIES = new Countries();

    /**
     * World Continent's information
     */
    public final Continent CONTINENT = com.arivu.jooq.tables.Continent.CONTINENT;

    /**
     * Countries information
     */
    public final Country COUNTRY = com.arivu.jooq.tables.Country.COUNTRY;

    /**
     * The table <code>countries.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = com.arivu.jooq.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * No further instances allowed
     */
    private Countries() {
        super("countries", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Continent.CONTINENT,
            Country.COUNTRY,
            SchemaVersion.SCHEMA_VERSION);
    }
}
