/*
 * This file is generated by jOOQ.
*/
package com.arivu.jooq;


import com.arivu.jooq.tables.Continent;
import com.arivu.jooq.tables.Country;
import com.arivu.jooq.tables.SchemaVersion;
import com.arivu.jooq.tables.records.ContinentRecord;
import com.arivu.jooq.tables.records.CountryRecord;
import com.arivu.jooq.tables.records.SchemaVersionRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.ULong;


/**
 * A class modelling foreign key relationships between tables of the <code>countries</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ContinentRecord, ULong> IDENTITY_CONTINENT = Identities0.IDENTITY_CONTINENT;
    public static final Identity<CountryRecord, ULong> IDENTITY_COUNTRY = Identities0.IDENTITY_COUNTRY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ContinentRecord> KEY_CONTINENT_PRIMARY = UniqueKeys0.KEY_CONTINENT_PRIMARY;
    public static final UniqueKey<ContinentRecord> KEY_CONTINENT_CONTINENT_UK_1 = UniqueKeys0.KEY_CONTINENT_CONTINENT_UK_1;
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = UniqueKeys0.KEY_COUNTRY_PRIMARY;
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_COUNTRY_UK_1 = UniqueKeys0.KEY_COUNTRY_COUNTRY_UK_1;
    public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = UniqueKeys0.KEY_SCHEMA_VERSION_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<ContinentRecord, ULong> IDENTITY_CONTINENT = createIdentity(Continent.CONTINENT, Continent.CONTINENT.ID);
        public static Identity<CountryRecord, ULong> IDENTITY_COUNTRY = createIdentity(Country.COUNTRY, Country.COUNTRY.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<ContinentRecord> KEY_CONTINENT_PRIMARY = createUniqueKey(Continent.CONTINENT, "KEY_continent_PRIMARY", Continent.CONTINENT.ID);
        public static final UniqueKey<ContinentRecord> KEY_CONTINENT_CONTINENT_UK_1 = createUniqueKey(Continent.CONTINENT, "KEY_continent_CONTINENT_UK_1", Continent.CONTINENT.CONTINENT_CODE, Continent.CONTINENT.CONTINENT_NAME);
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = createUniqueKey(Country.COUNTRY, "KEY_country_PRIMARY", Country.COUNTRY.ID);
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_COUNTRY_UK_1 = createUniqueKey(Country.COUNTRY, "KEY_country_COUNTRY_UK_1", Country.COUNTRY.ISO_2, Country.COUNTRY.NAME);
        public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = createUniqueKey(SchemaVersion.SCHEMA_VERSION, "KEY_schema_version_PRIMARY", SchemaVersion.SCHEMA_VERSION.VERSION);
    }
}
